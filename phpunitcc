#!/usr/bin/env php
<?php

set_include_path( dirname( __FILE__ ) . '/source' . PATH_SEPARATOR . get_include_path() );

require_once 'PHP/ChangeCoverage/Autoloader.php';

$autoloader = new PHP_ChangeCoverage_Autoloader( dirname( __FILE__ ) . '/library' );
$autoloader->register();

$command = new PHP_ChangeCoverage_TextUI_Command();
exit( $command->run( $_SERVER['argv'] ) );

PHP_Timer::start();

$arguments = $_SERVER['argv'];
array_shift( $arguments );

if ( false === ( $offset = array_search( '--coverage-html', $arguments ) ) )
{
    $coverageHtml = false;
}
else
{
    $coverageHtml       = true;
    $coverageHtmlTarget = $arguments[$offset + 1];

    unset( $arguments[$offset], $arguments[$offset + 1] );
}

if ( false === ($offset = array_search( '--coverage-clover', $arguments ) ) )
{
    $cloverUpdate = false;
    $cloverFile   = sys_get_temp_dir() . '/' . uniqid( '~php-change-coverage-' ) . '.xml';

    array_unshift( $arguments, '--coverage-clover', $cloverFile );
}
else
{
    $cloverUpdate = true;
    $cloverFile   = $arguments[$offset + 1];
}
$arguments = array_map( 'escapeshellarg', $arguments );

$command = 'phpunit ' . join( ' ', $arguments );

echo 'PHP_ChangeCoverage @package_version@ by Manuel Pichler', PHP_EOL,
     ' utilizes ';
passthru( $command, $code );

$timeRange = time() - ( 60 * 86400 );

if ( file_exists( $cloverFile ) && ( $cloverUpdate || $coverageHtml ) )
{
    $factory = new PHP_ChangeCoverage_Report_Factory();
    $report  = $factory->createReport( $cloverFile );

    $codeCoverage = new PHP_CodeCoverage();
    

    $factory = new PHP_ChangeCoverage_ChangeSet_Factory( dirname( __FILE__ ) . '/library/vcs_wrapper/src/classes' );
    vcsCache::initialize( sys_get_temp_dir() . '/cc-cache' );

    echo PHP_EOL, 'Collecting commits and meta data, this may take a moment.', PHP_EOL, PHP_EOL;

    foreach ( $report->getFiles() as $file )
    {
        $resource = $factory->create( $file );
        $resource->setStartDate( $timeRange );

        $xdebug = new PHP_ChangeCoverage_Xdebug( $resource );

        while ( $data = $xdebug->getCoverage() )
        {
            $codeCoverage->append( $data, md5( microtime() ) );
        }
    }

    if ( $cloverUpdate )
    {
        echo 'Writing change coverage data to XML file, this may take a moment.', PHP_EOL, PHP_EOL;

        $clover = new PHP_CodeCoverage_Report_Clover();
        $clover->process( $codeCoverage, $cloverFile );
    }
    else
    {
        unlink( $cloverFile );
    }

    if ( $coverageHtml )
    {
        echo 'Writing change coverage report, this may take a moment.', PHP_EOL, PHP_EOL;

        $html = new PHP_CodeCoverage_Report_HTML(
            array(
                'title'      =>  'Coverage Report for files modified since ' . date( 'Y/m/d', $timeRange ),
                'highlight'  =>  true,
                'yui'        =>  false,
                'generator'  =>  ' <a href="http://qafoo.com">ChangeCoverage</a>'
            )
        );
        $html->process( $codeCoverage, $coverageHtmlTarget );
    }

    PHP_Timer::stop();
    echo PHP_Timer::resourceUsage(), PHP_EOL;
}

exit( $code );